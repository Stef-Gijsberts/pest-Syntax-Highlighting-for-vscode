{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "pestfile",
    "fileTypes": ["pest"],
    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#multilinecomments"
        }
    ],
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.pestfile",
                    "match": "PUSH|(POP|PEEK)(_ALL)?"
                },
                {
                    "name": "variable.language.implicit.pestfile",
                    "match": "WHITESPACE|COMMENT"
                },
                {
                    "name": "constant.language.borders.pestfile",
                    "match": "[SE]OI"
                },
                {
                    "name": "constant.language.character.ascii.pestfile",
                    "match": "NEWLINE|ASCII_(ALPHA(_UPPER|_LOWER|NUMERIC)?|(NONZERO_|BIN_|OCT_|HEX_)?DIGIT)"
                },
                {
                    "name": "constant.language.character.unicode.letter.pestfile",
                    "match": "ANY|((UPPER|LOWER|TITLE)CASE_|CASED_|MODIFIER_|OTHER_)?LETTER"
                },
                {
                    "name": "constant.language.character.unicode.mark.pestfile",
                    "match": "(NONSPACING_|SPACING_|ENCLOSING_)?MARK"
                },
                {
                    "name": "constant.language.character.unicode.number.pestfile",
                    "match": "(DECIMAL_|LETTER_|OTHER_)?NUMBER"
                },
                {
                    "name": "constant.language.character.unicode.punctuation.pestfile",
                    "match": "(CONNECTOR_|DASH_|OPEN_|CLOSE_|INITIAL_|FINAL_|OTHER_)?PUNCTUATION"
                },
                {
                    "name": "constant.language.character.unicode.symbol.pestfile",
                    "match": "(MATH_|CURRENCY_|MODIFIER_|OTHER_)?SYMBOL"
                },
                {
                    "name": "constant.language.character.unicode.separator.pestfile",
                    "match": "(SPACE_|LINE_|PARAGRAPH_)?SEPARATOR"
                },
                {
                    "name": "constant.language.character.unicode.other.pestfile",
                    "match": "CONTROL|FORMAT|SURROGATE|PRIVATE_USE|UNASSIGNED"
                },
                {
                    "name": "constant.language.character.unicode.binary.pestfile",
                    "match": "ALPHABETIC|BIDI_CONTROL|CASE_IGNORABLE|CASED|CHANGES_WHEN_CASEFOLDED|CHANGES_WHEN_CASEMAPPED|CHANGES_WHEN_LOWERCASED|CHANGES_WHEN_TITLECASED|CHANGES_WHEN_UPPERCASED|DASH|DEFAULT_IGNORABLE_CODE_POINT|DEPRECATED|DIACRITIC|EXTENDER|GRAPHEME_BASE|GRAPHEME_EXTEND|GRAPHEME_LINK|HEX_DIGIT|HYPHEN|IDS_BINARY_OPERATOR|IDS_TRINARY_OPERATOR|ID_CONTINUE|ID_START|IDEOGRAPHIC|JOIN_CONTROL|LOGICAL_ORDER_EXCEPTION|LOWERCASE|MATH|NONCHARACTER_CODE_POINT|OTHER_ALPHABETIC|OTHER_DEFAULT_IGNORABLE_CODE_POINT|OTHER_GRAPHEME_EXTEND|OTHER_ID_CONTINUE|OTHER_ID_START|OTHER_LOWERCASE|OTHER_MATH|OTHER_UPPERCASE|PATTERN_SYNTAX|PATTERN_WHITE_SPACE|PREPENDED_CONCATENATION_MARK|QUOTATION_MARK|RADICAL|REGIONAL_INDICATOR|SENTENCE_TERMINAL|SOFT_DOTTED|TERMINAL_PUNCTUATION|UNIFIED_IDEOGRAPH|UPPERCASE|VARIATION_SELECTOR|WHITE_SPACE|XID_CONTINUE|XID_START"
                },
                {
                    "name": "keyword.operator.pestfile",
                    "match": "-|\\.\\.|!|~|_|@|\\$"
                },
                {
                    "name": "keyword.operator.repetition.pestfile",
                    "match": "\\+|\\*|\\?|{\\s*[0-9]+\\s*,\\s*}|{\\s*,\\s*[0-9]+\\s*}|{\\s*[0-9]+\\s*,\\s*[0-9]+\\s*}"
                },
                {
                    "name": "variable.name.pestfile",
                    "match": "[A-Za-z_][A-Za-z0-9_]*"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.pestfile",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                          "include": "#characterescape"
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.pestfile",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                          "include": "#characterescape"
                        }
                    ]
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.pestfile",
                    "match": "//.*"
                }
            ]
        },
        "multilinecomments": {
            "patterns": [
                {
                    "name": "comment.block.pestfile",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "include": "#multilinecomments"
                        }
                    ]
                }
            ]
        },
        "characterescape": {
          "name": "constant.character.escape.pestfile",
          "match": "((\\\\u\\{[a-fA-F0-9]{4}\\})|(\\\\.))"
        }
    },
    "scopeName": "source.pestfile"
}
